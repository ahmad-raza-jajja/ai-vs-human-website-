document.addEventListener('DOMContentLoaded', function() {
    console.log('AI vs Human Website Loaded!');
    
    // Smooth scrolling for navigation
    document.querySelectorAll('nav a').forEach(anchor => {
        anchor.addEventListener('click', function(e) {
            e.preventDefault();
            const targetId = this.getAttribute('href');
            const targetElement = document.querySelector(targetId);
            
            window.scrollTo({
                top: targetElement.offsetTop - 70, // Account for nav height
                behavior: 'smooth'
            });
        });
    });

    // Quiz Game Functionality
    initQuiz();
});

// Quiz Game Configuration
const quizQuestions = [
    {
        type: 'poem',
        title: 'Is this poem written by AI or Human?',
        content: `Electric dreams in silicon minds,
Algorithms dance, humanity rewinds.
In binary whispers, consciousness seeks,
While data streams flow through digital peaks.`,
        answer: 'ai',
        explanation: 'This poem was generated by an AI. The structured pattern, generic tech terminology, and somewhat predictable rhyme scheme are common in AI-generated poetry. Human poetry often has more subtle emotional nuance and unexpected metaphors.'
    },
    {
        type: 'poem',
        title: 'Is this poem written by AI or Human?',
        content: `I taste the afternoon in yellow sips,
Time dissolves like sugar between my lips.
The clock hands point to nowhere special,
As memories gather dust in corners, confessional.`,
        answer: 'human',
        explanation: 'This poem was written by a human. The unusual synesthetic metaphor "taste the afternoon in yellow sips" and the original imagery around time show a creative connection that AI still struggles to generate authentically.'
    },
    {
        type: 'story',
        title: 'Was this short paragraph written by AI or Human?',
        content: `The coffee shop buzzed with its usual morning energy. Sarah tapped her fingers against the ceramic mug, watching steam rise in lazy curls. Across the table, Michael's chair remained empty, just as it had for the past three Tuesdays. The text message notification lit up her phone: "Traffic. Be there in 10." She smiled, knowing he was already halfway across town, having forgotten their meeting entirely. Again.`,
        answer: 'human',
        explanation: 'This paragraph was written by a human. The nuanced emotional subtext (Sarah knowing Michael is lying but accepting it), the specific details like "the past three Tuesdays," and the natural flow of the narrative suggest human authorship.'
    },
    {
        type: 'story',
        title: 'Was this short paragraph written by AI or Human?',
        content: `The laboratory hummed with activity as Dr. Chen analyzed the latest results. The quantum computer had successfully maintained coherence for a record-breaking 102 seconds, a significant improvement over previous attempts. This breakthrough could revolutionize the field of computational medicine, potentially allowing for the simulation of complex protein folding mechanisms that had previously been impossible to model.`,
        answer: 'ai',
        explanation: 'This paragraph was generated by an AI. While factually plausible, it contains telltale signs of AI writing: overly explanatory information, generic scientific phrasing, and a somewhat formulaic structure that efficiently delivers information without subtle character development or unique stylistic choices.'
    },
    {
        type: 'painting',
        title: 'Is this painting created by AI or Human?',
        content: `<img class="painting" src="https://public-frontend-cos.metadl.com/mgx/img/ai-landscape.jpg" alt="Colorful surreal landscape">`,
        answer: 'ai',
        explanation: 'This image was created by AI. Look for telltale signs: unusual distortions in certain areas, inconsistent textures, and that distinctive "AI aesthetic" with overly perfect blending. AI art often has trouble with fine details like hands, faces, or text.'
    },
    {
        type: 'painting',
        title: 'Is this painting created by AI or Human?',
        content: `<img class="painting" src="https://public-frontend-cos.metadl.com/mgx/img/human-painting.jpg" alt="Abstract human painting">`,
        answer: 'human',
        explanation: 'This painting was created by a human artist. The consistent intentionality behind the brush strokes, the coherent composition with deliberate imperfections, and the balanced color theory all suggest human creation.'
    },
    {
        type: 'music',
        title: 'Was this music composed by AI or Human?',
        content: `<audio class="music" controls>
            <source src="https://public-frontend-cos.metadl.com/mgx/audio/ai-music.mp3" type="audio/mpeg">
            Your browser does not support the audio element.
        </audio>`,
        answer: 'ai',
        explanation: 'This music was composed by AI. While it follows musical theory correctly, it lacks the emotional depth and subtle variations that human composers typically include. The patterns are mathematically consistent but somewhat predictable in structure.'
    },
    {
        type: 'music',
        title: 'Was this music composed by AI or Human?',
        content: `<audio class="music" controls>
            <source src="https://public-frontend-cos.metadl.com/mgx/audio/human-music.mp3" type="audio/mpeg">
            Your browser does not support the audio element.
        </audio>`,
        answer: 'human',
        explanation: 'This music was composed by a human. You can hear the intentional emotional phrasing, the natural breathing points in the melody, and the subtle imperfections that give it character and depth.'
    },
    {
        type: 'code',
        title: 'Was this code written by AI or Human?',
        content: `<pre><code>
function optimizeDatabaseQuery(query, params) {
  // Check if query is cached
  if (QUERY_CACHE.has(query)) {
    const cachedResult = QUERY_CACHE.get(query);
    if (!cachedResult.isExpired()) {
      metrics.incrementCacheHit();
      return cachedResult.data;
    }
  }

  // Apply query optimization rules
  const optimizedQuery = queryOptimizer.restructure(query);
  
  // Execute and time query
  const startTime = performance.now();
  const result = executeRawQuery(optimizedQuery, params);
  const executionTime = performance.now() - startTime;

  // Cache result if execution time exceeds threshold
  if (executionTime > CACHE_THRESHOLD_MS) {
    QUERY_CACHE.set(query, {
      data: result,
      timestamp: Date.now(),
      isExpired: function() {
        return Date.now() - this.timestamp > CACHE_EXPIRY_MS;
      }
    });
  }

  return result;
}
</code></pre>`,
        answer: 'human',
        explanation: 'This code was written by a human. It shows consistent styling, meaningful variable names, and pragmatic optimizations that reflect real-world performance considerations. The caching logic includes thoughtful edge cases that suggest experience with actual production systems.'
    },
    {
        type: 'code',
        title: 'Was this code written by AI or Human?',
        content: `<pre><code>
def process_user_data(user_data):
    """
    Process user data and return formatted results.
    
    Parameters:
    user_data (dict): Dictionary containing user information
    
    Returns:
    dict: Processed user information
    """
    # Extract user information
    name = user_data.get('name', 'Unknown')
    age = user_data.get('age', 0)
    preferences = user_data.get('preferences', [])
    
    # Calculate user score based on preferences
    score = calculate_user_score(preferences)
    
    # Format the output
    result = {
        'user_id': generate_user_id(name, age),
        'display_name': format_display_name(name),
        'age_group': categorize_age_group(age),
        'recommended_items': get_recommendations(preferences, score)
    }
    
    return result
</code></pre>`,
        answer: 'ai',
        explanation: 'This code was generated by AI. While technically correct, it has several AI tells: overly detailed docstring compared to implementation simplicity, generic function calls that are not defined (like calculate_user_score), and a somewhat templated approach to the problem. Human code often contains more specific edge cases or optimizations based on the actual application context.'
    }
];

// Quiz functionality
function initQuiz() {
    let currentQuestion = 0;
    let score = 0;
    
    const startButton = document.getElementById('start-quiz');
    const nextButton = document.getElementById('next-question');
    const restartButton = document.getElementById('restart-quiz');
    const answerButtons = document.querySelectorAll('.answer-btn');
    
    // Update UI elements with question count
    document.getElementById('total-questions').textContent = quizQuestions.length;
    document.getElementById('total-questions-result').textContent = quizQuestions.length;
    
    // Start quiz event
    startButton.addEventListener('click', () => {
        showPanel('quiz-question');
        loadQuestion(currentQuestion);
    });
    
    // Next question event
    nextButton.addEventListener('click', () => {
        currentQuestion++;
        
        if (currentQuestion < quizQuestions.length) {
            showPanel('quiz-question');
            loadQuestion(currentQuestion);
        } else {
            // Quiz completed
            showPanel('quiz-results');
            document.getElementById('correct-answers').textContent = score;
            
            // Display result message
            const resultMessage = document.getElementById('result-message');
            const percentage = (score / quizQuestions.length) * 100;
            
            if (percentage >= 80) {
                resultMessage.innerHTML = "<p>Excellent! You have a great ability to distinguish between AI and human-created content!</p>";
            } else if (percentage >= 60) {
                resultMessage.innerHTML = "<p>Good job! You're on your way to becoming an AI detection expert.</p>";
            } else {
                resultMessage.innerHTML = "<p>It's tricky, isn't it? With practice, you'll get better at spotting the differences between AI and human work.</p>";
            }
        }
    });
    
    // Restart quiz event
    restartButton.addEventListener('click', () => {
        currentQuestion = 0;
        score = 0;
        showPanel('quiz-start');
    });
    
    // Handle answer selection
    answerButtons.forEach(button => {
        button.addEventListener('click', () => {
            const userAnswer = button.getAttribute('data-answer');
            const correctAnswer = quizQuestions[currentQuestion].answer;
            
            showPanel('quiz-feedback');
            
            const feedbackResult = document.getElementById('feedback-result');
            const feedbackExplanation = document.getElementById('feedback-explanation');
            
            if (userAnswer === correctAnswer) {
                feedbackResult.innerHTML = '<i class="fas fa-check-circle"></i> Correct!';
                feedbackResult.className = 'feedback-result correct';
                score++;
            } else {
                feedbackResult.innerHTML = '<i class="fas fa-times-circle"></i> Incorrect!';
                feedbackResult.className = 'feedback-result incorrect';
            }
            
            feedbackExplanation.textContent = quizQuestions[currentQuestion].explanation;
        });
    });
    
    // Helper function to load question
    function loadQuestion(index) {
        const question = quizQuestions[index];
        
        document.getElementById('current-question').textContent = index + 1;
        document.getElementById('question-title').textContent = question.title;
        document.getElementById('question-media').innerHTML = question.content;
        
        // Reset button styling
        answerButtons.forEach(btn => {
            btn.classList.remove('ai', 'human');
        });
    }
    
    // Helper function to show specific panel
    function showPanel(panelId) {
        const panels = document.querySelectorAll('.quiz-panel');
        panels.forEach(panel => {
            panel.classList.remove('active');
        });
        
        document.getElementById(panelId).classList.add('active');
    }
}